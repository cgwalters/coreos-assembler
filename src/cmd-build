#!/usr/bin/env bash
set -xeuo pipefail

dn=$(dirname $0)
. ${dn}/cmdlib.sh

export LIBGUESTFS_BACKEND=direct

prepare_build

buildid=$(date -u +'%Y-%m-%d-%H-%M')

# Build uses cached data
runcompose --cache-only
if ! [ -f work/treecompose.changed ] ; then
    exit 0
fi
sudo chown -R -h builder: ${workdir}/repo-build
ostree --repo=${workdir}/repo pull-local ${workdir}/repo-build "${ref}"
ostree --repo=${workdir}/repo summary -u
commit=$(ostree --repo=${workdir}/repo rev-parse "${ref}")
version=$(ostree --repo=${workdir}/repo-build show --print-metadata-key=version ${commit} | sed -e "s,',,g")

mkdir -p "${buildid}"
cd "${buildid}"

# Generate JSON
if [ -n "${previous_commit}" ]; then
    previous_commit_json='"'"${previous_commit}"'"'
else
    previous_commit_json=null
fi

rm -f local.ks
# HACK: pull out the magic bit; we should have virt-install
# handle this with the ksflatten
grep -e "--coreos-virt-install-disk-size-gb" ${configdir}/image.ks > local.ks
# https://github.com/coreos/coreos-assembler/pull/12
# AKA commit 1d2150cf5607ade19780e4bd6f195e5c0efdb0ac
# TODO: move this into coreos-virt-install
cat >>local.ks <<EOF
%include ${configdir}/image.ks
%pre
mkdir -p /mnt/ostree-repo
mount -t 9p -o ro,trans=virtio,version=9p2000.L /mnt/ostree-repo /mnt/ostree-repo
%end
ostreesetup --nogpg --osname=coreos --remote=coreos --url=file:///mnt/ostree-repo --ref="${ref}"
EOF

imageprefix=${name}-${version}
tail -F $(pwd)/install.log & # send output of virt-install to console
/usr/libexec/coreos-assembler/virt-install --dest=$(pwd)/${imageprefix}-base.qcow2 --create-disk --kickstart $(pwd)/local.ks --kickstart-out $(pwd)/flattened.ks --location ${workdir}/installer/*.iso --console-log-file $(pwd)/install.log --local-repo=${workdir}/repo

/usr/libexec/coreos-assembler/gf-oemid ${imageprefix}-base.qcow2 $(pwd)/${imageprefix}-qemu.qcow2 qemu

cat > meta.json <<EOF
{
 "previous-commit": ${previous_commit_json},
 "commit": "${commit}",
 "version": "${version}"
}
EOF
